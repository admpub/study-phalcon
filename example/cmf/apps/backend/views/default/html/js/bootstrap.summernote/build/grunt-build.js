module.exports = function (grunt) {
  'use strict';

  var requirejs = require('requirejs');
  var path = require('path');

  var rDefineStart = /define\([^{]*?{/;
  var rDefineEndWithReturn = /\s*return\s+[^\}]+(\}\);[^\w\}]*)$/;
  var rDefineEnd = /\}\);[^}\w]*$/;


  /**
   * Strip all definitions generated by requirejs
   *
   * @param {String} name
   * @param {String} path
   * @param {String} contents The contents to be written (including their AMD wrappers)
   */
  var convert = function (name, path, contents) {
    contents = contents.replace(rDefineStart, '');

    if (rDefineEndWithReturn.test(contents)) {
      contents = contents.replace(rDefineEndWithReturn, '');
    } else {
      contents = contents.replace(rDefineEnd, '');
    }

    return contents;
  };
  
  grunt.registerMultiTask('build', 'concatenate source: summernote.js', function () {
    var config = {
      name: 'summernote',
      baseUrl: this.data.baseUrl,
      out: this.data.out,
      optimize: 'none',
      wrap: {
        startFile: path.join(this.data.baseUrl, this.data.startFile),
        endFile: path.join(this.data.baseUrl, this.data.endFile)
      },
      findNestedDependencies: true,
      skipSemiColonInsertion: true,
      onBuildWrite: convert,
      excludeShallow: ['jquery', 'CodeMirror', 'app'],
      paths: {
        jquery: 'empty:',
        CodeMirror: 'empty:'
      }
    };

    var done = this.async();
    requirejs.optimize(config, function () {
      done();
    }, function (err) {
      done(err);
    });
  });
};
